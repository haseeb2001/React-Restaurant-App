{"version":3,"sources":["redux/dishes.js","redux/ActionTypes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HomeComponent.js","redux/ActionCreators.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","components/MainComponent.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Dishes","state","isLoading","errMess","dishes","action","type","payload","Comments","comments","comment","concat","Leaders","leaders","Promotions","promotions","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","message","Loading","className","baseUrl","RenderMenuitem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","map","key","active","required","val","length","maxLength","len","CommentForm","toggleModal","bind","handleComment","isModalOpen","this","setState","values","postComment","dishId","rating","author","Fragment","outline","isOpen","toggle","onSubmit","htmlFor","md","size","select","model","defaultValue","text","placeholder","validators","minLength","show","messages","textarea","rows","color","Component","RenderDish","in","transformProps","exitTransform","top","description","RenderComments","my_comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","dishesFailed","errmess","addDishes","leadersFailed","addLeaders","promosLoading","promosFailed","addPromos","promos","commentsFailed","addComments","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","console","log","JSON","stringify","postFeedback","resetFeedbackForm","href","role","offset","check","checkbox","Header","toggleNav","handleLogin","isNavOpen","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","imgStyle","maxWidth","RenderLeader","left","style","object","body","heading","About","title","list","Main","fetchDishes","fetchLeaders","fetchComments","fetchPromos","location","classNames","timeout","path","component","filter","featured","promo","exact","match","parseInt","params","commentsErrMess","React","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","crediantials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","credentials","res","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abaf0686.chunk.js","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return{...state, isLoading: false , errMess:null,dishes:action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return{...state, isLoading: true , errMess:null,dishes:[]};\r\n            \r\n        case ActionTypes.DISHES_FAILED:\r\n            return{...state, isLoading: false , errMess:action.payload};\r\n            \r\n        default:\r\n          return state;\r\n      }\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders= (state ={ isLoading: true,\r\n                                errMess: null,\r\n                                leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        \r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary aria-hidden=true\">       \r\n            </span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\n// import {Media} from 'reactstrap';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb , BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuitem ({dish, onClick})\r\n{\r\nreturn(\r\n    <Card >\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n                </Link>\r\n              </Card>\r\n);\r\n} \r\n\r\n    const Menu = (props) =>  {\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div  className=\"col-12 col-md-5 m-1\" key={dish.id}> \r\n                  <RenderMenuitem dish={dish} onClick={props.onClick}/>\r\n                </div>\r\n              );\r\n        });\r\n        \r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n  \r\nexport default Menu;\r\n","import React,{Component} from 'react';\r\n\r\nimport { Card, CardImg,  CardText, CardBody,\r\n    CardTitle,Breadcrumb , BreadcrumbItem,\r\n    Button,Modal, ModalHeader, ModalBody, Row,\r\n    Label, Col  } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n//===================================================\r\nconst required= (val) => val && val.length;\r\nconst maxLength= (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength= (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleComment = this.handleComment.bind(this);\r\n        this.state ={\r\n            isModalOpen: false\r\n        };\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleComment(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n      \r\n\r\n    }\r\n      render()\r\n      {\r\n        return(\r\n            <React.Fragment>\r\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n           \r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleComment(values)}>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"rating\" md={6}>Rating</Label>\r\n                        <Col md={{size:10}}>\r\n                                    <Control.select type=\"select\" name=\"rating\" \r\n                                    model=\".rating\" className=\"form-control\" \r\n                                    defaultValue={1}>    \r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                        <option>6</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                        <Label htmlFor=\"author\" md={6}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text type=\"text\" model=\".author\" id=\"author\" \r\n                                    name=\"author\" placeholder=\"Your Name\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}/>\r\n                                   <Errors\r\n                                   \r\n                                   className=\"text-danger\"\r\n                                   show=\"touched\"\r\n                                   model=\".author\"\r\n                                   messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}\r\n                                   />\r\n                                </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"comment\" md={4}>Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea type=\"textarea\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\" model=\".comment\" className=\"form-control\" />\r\n                                </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                <Col md={{size: 10}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n           \r\n            </React.Fragment>\r\n        );\r\n      }\r\n}\r\n\r\n    function  RenderDish( {dish}){\r\n        if(dish != null)\r\n            return(\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }} >\r\n                    <Card>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle> {dish.name}\r\n                            </CardTitle>\r\n                            <CardText>{dish.description} </CardText>\r\n                        </CardBody>\r\n                     </Card>\r\n\r\n\r\n\r\n                </FadeTransform>\r\n            \r\n        );\r\n       else\r\n        return(\r\n            <div></div>\r\n            );\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n                \r\n                const my_comments=comments.map((comment)=>{\r\n                    // const date= new Date(comment.date)\r\n                    return(\r\n                     <Stagger in key={comment.id}>\r\n                        <Fade in>\r\n                        <li key={comment.id} >\r\n                            <p >{comment.comment} </p>\r\n                            <p>--{comment.author}, \r\n                            {new Intl.DateTimeFormat('en-US', \r\n                            { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n\r\n                        </li>\r\n                        </Fade>\r\n                        </Stagger>   \r\n                        \r\n                    );\r\n                    \r\n                });\r\n                return(\r\n                        <div>\r\n                            <h4>Comments</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                            \r\n                            {my_comments}\r\n                            <CommentForm\r\n                            dishId={dishId} postComment={postComment}/>    \r\n                            </ul>\r\n                              \r\n                             \r\n                        </div>\r\n                        \r\n                   \r\n                );\r\n            \r\n    }\r\n    \r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null)\r\n            return (\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                         postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n      />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n}\r\n  \r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport {Card , CardBody , CardImg , CardSubtitle, CardTitle,\r\n          CardText} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item,isLoading,errMess}) {\r\n    \r\n    if (isLoading) {\r\n      return(\r\n            <Loading />\r\n      );\r\n  }\r\n  else if (errMess) {\r\n      return(\r\n            <h4>{errMess}</h4>\r\n      );\r\n  }\r\n  else\r\n    return(\r\n      <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                  <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{item.name}</CardTitle>\r\n                      {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                      <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                  </Card>\r\n        </FadeTransform>\r\n        \r\n    );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row align-items-start\">\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item = {props.dish} \r\n            isLoading={props.dishesLoading}\r\n             errMess={props.dishesErrMess}/>\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item={props.promotion}\r\n             isLoading={props.promoLoading} \r\n             errMess={props.promoErrMess}/>\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item = {props.leader}\r\n            isLoading={props.leadersLoading}\r\n            errMess={props.leadersErrMess}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home;  ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const postFeedback=(firstname,lastname,telnum,email,agree,contactType,message)=>(dispatch)=>\r\n{\r\n      const newFeedback={\r\n        firstname:firstname,\r\n        lastname:lastname,\r\n        telnum:telnum,\r\n        email:email,\r\n        agree:agree,\r\n        contactType:contactType,\r\n        message:message\r\n      };\r\n\r\n      newFeedback.date= new Date().toISOString();\r\n      return fetch(baseUrl + 'feedback',{\r\n        method:'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers : {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials:\"same-origin\"\r\n      })\r\n\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(res => alert(JSON.stringify(res)))\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n}\r\n//==================================================\r\nexport const addComment = (comment ) => ({\r\n  type:ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n});\r\nexport const postComment =(dishId, rating, author, comment)=> (dispatch)=>{\r\n\r\n    const newComment={\r\n      dishId:dishId,\r\n      rating:rating,\r\n      author:author,\r\n      comment:comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'comments',{\r\n      method:'POST',\r\n      body: JSON.stringify(newComment),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      crediantials:\"same-origin\"\r\n    })\r\n\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addComment(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); \r\n      alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));;\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n//----------------------------\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));;\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n//----------------------------\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));;\r\n    \r\n};\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n//----------------------------\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n      \r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));;\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,Button ,Label , Col,Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control,Form, Errors } from 'react-redux-form';\r\nimport { postComment } from '../redux/ActionCreators';\r\n\r\nconst required= (val) => val && val.length;\r\nconst maxLength= (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength= (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber= (val)=> !isNaN(Number(val));\r\nconst validEmail= (val)=> /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n    \r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,\r\n            values.email,values.agree,values.contactType,values.message);\r\n        this.props.resetFeedbackForm();\r\n        //event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n\r\n         return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact Us</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text type=\"text\" model=\".firstname\" id=\"firstname\" \r\n                                    name=\"firstname\" placeholder=\"First Name\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}/>\r\n                                   <Errors\r\n                                   className=\"text-danger\"\r\n                                   show=\"touched\"\r\n                                   model=\".firstname\"\r\n                                   messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}\r\n                                   />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\" model=\".lastname\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                      <Errors\r\n                                   className=\"text-danger\"\r\n                                   show=\"touched\"\r\n                                   model=\".lastname\"\r\n                                   messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}\r\n                                   /> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\" model=\".telnum\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15),isNumber\r\n                                        }} />\r\n                                    <Errors\r\n                                   className=\"text-danger\"\r\n                                   show=\"touched\"\r\n                                   model=\".telnum\"\r\n                                   messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less',\r\n                                    isNumber: 'Must be a number'\r\n                                }}\r\n                                   />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text type=\"email\" model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"email\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required,validEmail\r\n                                        }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        show=\"touched\"\r\n                                        model=\".email\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox type=\"checkbox\"\r\n                                                name=\"agree\" model=\".agree\" className=\"form-check-input\" />\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                   </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select type=\"select\" name=\"contactType\" \r\n                                    model=\".contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"10\" model=\".message\" className=\"form-control\" />\r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nclass Header extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen:false\r\n        };\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src='assets/images/logo.png' height=\"30\" width=\"41\" \r\n                        alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'>\r\n                                <span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'>\r\n                                <span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'>\r\n                                <span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'>\r\n                                <span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            \r\n                        </Collapse>\r\n                </div>\r\n                </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                <div className=\"row row-header\">\r\n                    <div className=\"col-12 col-sm-6\">\r\n                        <h1>Ristorante con Fusion</h1>\r\n                        <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer (props){\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                          121, Clear Water Bay Road<br />\r\n                          Clear Water Bay, Kowloon<br />\r\n                          HONG KONG<br />\r\n                          <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                          <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                          <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                             confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center mt-2\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a  className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n\r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport {  Fade, Stagger } from 'react-animation-components';\n\nvar imgStyle = {\n    maxWidth: \"100px\",\n  };\n\nfunction RenderLeader ({item})\n{         \n\n    return(\n        <Fade in>\n        <Media className=\"mt-3\">\n            <Media left>\n                <Media style={imgStyle} object src={baseUrl + item.image} alt={item.name} />\n            </Media>\n            <Media body className=\"ml-4\">\n                <Media heading>\n                {item.name}\n                </Media>\n                <p>{item.designation}</p>\n                <p>{item.description}</p>\n            </Media>\n        </Media>\n        </Fade>\n        \n        );\n}\nfunction About(props) {\n    \n    const leaders = props.leaders.map((leader) => {\n        return (\n            \n            <Stagger in key={leader.id}>\n            <RenderLeader key={leader.id} item={leader}/>\n            </Stagger>\n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                \n                    <Media list>\n                        {leaders}\n                    </Media>\n                    \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React from 'react';\r\n// import logo from './logo.svg';\r\n\r\n\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport { Switch, Route, Redirect,withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos,fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n  postComment: (dishId, rating, author, comment) => \r\n  dispatch(postComment(dishId, rating, author, comment)),\r\n\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n\r\n  postFeedback: (firstname,lastname,telnum,email,agree,contactType,message) => \r\n  dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message))\r\n});\r\n\r\nclass Main extends React.Component {\r\n  \r\n  //     onDishSelect(dishId) {\r\n  //       this.setState({ selectedDish: dishId});\r\n  // }\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchLeaders();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n  }\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n          <Home\r\n          dish={this.props.dishes.dishes.filter((dish)=> dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n          \r\n          leader={this.props.leaders.leaders.filter((leader)=> leader.featured)[0]}\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    \r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          \r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n          />\r\n      );\r\n    };\r\n\r\n    const Aboutus =() => {\r\n      return(\r\n        <About leaders={this.props.leaders.leaders}\r\n        isLoading={this.props.leaders.isLoading}\r\n            errMess={this.props.leaders.errMess}/>\r\n\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <Header/>\r\n\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route path='/contactus' component={()=> <Contact \r\n                  postFeedback={this.props.postFeedback}\r\n                  resetFeedbackForm={this.props.resetFeedbackForm}\r\n                  />} />\r\n                  <Route path='/aboutus' component={Aboutus}/>\r\n                  <Redirect to=\"/home\" />\r\n              </Switch> \r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n          \r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\nimport Main from './components/MainComponent';\n\nconst store = ConfigureStore();\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore , combineReducers, applyMiddleware} from 'redux';\r\nimport { Dishes } from './dishes'\r\nimport { Comments } from './comments'\r\nimport { Leaders } from './leaders'\r\nimport { Promotions } from './promotions'\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback:InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}